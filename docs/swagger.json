{
    "swagger": "2.0",
    "info": {
        "title": "users-service",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users (admin)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.AdminUserResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user (admin)",
                "parameters": [
                    {
                        "description": "Create user (admin)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdminCreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_username, bad_request:invalid_email, bad_request:invalid_password, bad_request:user_exist_email, bad_request:user_exist_username, bad_request:role_not_found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/users/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get user roles (admin)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.AdminUserRoleResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create user role (admin)",
                "parameters": [
                    {
                        "description": "Create user role (admin)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdminCreateUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.AdminUserRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_role_id, bad_request:invalid_role_name, bad_request:role_exist_id, bad_request:role_exist_name",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/users/roles/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Delete user role (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Possible error codes: bad_request:role_not_found, bad_request:role_is_used",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update user role (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user role (admin)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdminUpdateUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:role_not_found, bad_request:invalid_role_name, bad_request:role_exist_name",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:user_not_found, bad_request:user_is_used",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/auth": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User auth",
                "parameters": [
                    {
                        "description": "User auth",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_login, bad_request:invalid_password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Possible error codes: unauthorized:invalid_credentials",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/auth/2fa/disable": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User auth 2FA disable",
                "parameters": [
                    {
                        "description": "User auth 2FA disable",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuth2faDisableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_password, bad_request:invalid_token, bad_request:mfa_disabled",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Possible error codes: unauthorized:invalid_credentials",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/auth/2fa/enable": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User auth 2FA enable",
                "parameters": [
                    {
                        "description": "User auth 2FA enable",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuth2faEnableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_token, bad_request:mfa_enabled",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/auth/2fa/settings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User auth 2FA settings",
                "parameters": [
                    {
                        "description": "User auth 2FA settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuth2faSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuth2faSettingsResponse"
                        }
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Possible error codes: unauthorized:invalid_credentials",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/auth/2fa/validate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Checking the two-factor authentication code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User auth 2FA validate",
                "parameters": [
                    {
                        "description": "User auth 2FA validate",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuth2faValidateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuth2faValidateResponse"
                        }
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_token, bad_request:mfa_disabled",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/auth/token/renew": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Renew JWT token",
                "parameters": [
                    {
                        "description": "Renew JWT token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserTokenRenewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_refresh_token, bad_request:invalid_token, bad_request:token_already_used",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/auth/token/validate": {
            "post": {
                "description": "Parsing and validation of the access token. Mainly used in the authorization mechanism across various microservices.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate JWT token",
                "parameters": [
                    {
                        "description": "Validate JWT token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserTokenValidateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserTokenValidateResponse"
                        }
                    },
                    "400": {
                        "description": "Possible error codes: bad_request, bad_request:invalid_access_token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Possible error codes: unauthorized:invalid_token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdminUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AdminCreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.AdminCreateUserRoleRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.AdminUpdateUserRoleRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.AdminUserResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/dto.AdminUserRoleResponse"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.AdminUserRoleResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuth2faDisableRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuth2faEnableRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuth2faSettingsRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuth2faSettingsResponse": {
            "type": "object",
            "properties": {
                "secret": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuth2faValidateRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuth2faValidateResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuthRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "mfa_required": {
                    "type": "boolean"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.UserTokenRenewRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.UserTokenValidateRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "dto.UserTokenValidateResponse": {
            "type": "object",
            "properties": {
                "audience": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expires": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "issued": {
                    "type": "integer"
                },
                "issuer": {
                    "type": "string"
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                },
                "user": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}